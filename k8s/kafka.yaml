apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
  namespace: shipanything
  labels:
    app: kafka
spec:
  serviceName: kafka-headless
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      containers:
      - name: kafka
        image: apache/kafka:3.7.0
        ports:
        - containerPort: 9092
          name: broker
        - containerPort: 9093
          name: controller
        env:
        - name: KAFKA_NODE_ID
          value: "1"
        - name: KAFKA_PROCESS_ROLES
          value: "broker,controller"
        - name: KAFKA_LISTENERS
          value: "PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093"
        - name: KAFKA_ADVERTISED_LISTENERS
          value: "PLAINTEXT://kafka-0.kafka-headless.shipanything.svc.cluster.local:9092"
        - name: KAFKA_CONTROLLER_LISTENER_NAMES
          value: "CONTROLLER"
        - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
          value: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT"
        - name: KAFKA_CONTROLLER_QUORUM_VOTERS
          value: "1@kafka-0.kafka-headless.shipanything.svc.cluster.local:9093"
        - name: KAFKA_INTER_BROKER_LISTENER_NAME
          value: "PLAINTEXT"
        - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
          value: "1"
        - name: KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR
          value: "1"
        - name: KAFKA_TRANSACTION_STATE_LOG_MIN_ISR
          value: "1"
        - name: KAFKA_AUTO_CREATE_TOPICS_ENABLE
          value: "true"
        - name: KAFKA_NUM_PARTITIONS
          value: "3"
        - name: KAFKA_DEFAULT_REPLICATION_FACTOR
          value: "1"
        - name: KAFKA_MIN_IN_SYNC_REPLICAS
          value: "1"
        - name: KAFKA_LOG_RETENTION_HOURS
          value: "168"
        - name: KAFKA_LOG_DIRS
          value: "/tmp/kraft-combined-logs"
        command:
        - /bin/bash
        - -c
        - |
          # Generate cluster UUID
          export KAFKA_CLUSTER_ID=$(/opt/kafka/bin/kafka-storage.sh random-uuid)
          
          # Format the log directory
          /opt/kafka/bin/kafka-storage.sh format -t $KAFKA_CLUSTER_ID -c /opt/kafka/config/kraft/server.properties
          
          # Start Kafka
          exec /opt/kafka/bin/kafka-server-start.sh /opt/kafka/config/kraft/server.properties \
            --override node.id=1 \
            --override process.roles=broker,controller \
            --override listeners=PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093 \
            --override advertised.listeners=PLAINTEXT://kafka-0.kafka-headless.shipanything.svc.cluster.local:9092 \
            --override controller.listener.names=CONTROLLER \
            --override listener.security.protocol.map=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT \
            --override controller.quorum.voters=1@kafka-0.kafka-headless.shipanything.svc.cluster.local:9093 \
            --override inter.broker.listener.name=PLAINTEXT \
            --override offsets.topic.replication.factor=1 \
            --override transaction.state.log.replication.factor=1 \
            --override transaction.state.log.min.isr=1 \
            --override auto.create.topics.enable=true \
            --override num.partitions=3 \
            --override default.replication.factor=1 \
            --override min.insync.replicas=1 \
            --override log.retention.hours=168
        volumeMounts:
        - name: kafka-logs
          mountPath: /tmp/kraft-combined-logs
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        livenessProbe:
          tcpSocket:
            port: 9092
          initialDelaySeconds: 90
          periodSeconds: 10
        readinessProbe:
          tcpSocket:
            port: 9092
          initialDelaySeconds: 60
          periodSeconds: 5
  volumeClaimTemplates:
  - metadata:
      name: kafka-logs
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 5Gi
---
apiVersion: v1
kind: Service
metadata:
  name: kafka-headless
  namespace: shipanything
  labels:
    app: kafka
spec:
  clusterIP: None
  selector:
    app: kafka
  ports:
  - name: broker
    port: 9092
    targetPort: 9092
  - name: controller
    port: 9093
    targetPort: 9093
---
apiVersion: v1
kind: Service
metadata:
  name: kafka
  namespace: shipanything
  labels:
    app: kafka
spec:
  selector:
    app: kafka
  ports:
  - name: broker
    port: 9092
    targetPort: 9092
